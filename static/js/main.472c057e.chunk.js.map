{"version":3,"sources":["logo.svg","components/main/main.jsx","components/main/mainContainer.jsx","App.js","reportWebVitals.js","redux/reduxStore.js","index.js","components/main/main.module.css"],"names":["Main","props","useState","result","setResult","files","mainArray","setMainArray","countItems","setCountItems","resultArray","setResultArray","nameFileDownload","setNameFileDownload","beforeText","setBeforeText","afterText","setAfterText","className","style","inputWrapper","onChange","e","tempArrayOnFile","target","i","reader","FileReader","readAsText","onload","res","split","tempArray","Array","j","length","trim","push","replace","console","log","load","onerror","name","type","inputFileStyle","htmlFor","inputFileButton","inputFileIconWrapper","inputFileButtonText","value","id","onClick","tempArrayAddText","b","join","rows","tempOnLoadArray","p","h","undefined","tempRes","filename","element","document","createElement","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","download","compose","connect","state","withRouter","App","exact","path","render","to","component","MainContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","Store","getElementById","module","exports"],"mappings":"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","file":"static/js/main.472c057e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from \"react\";\r\nimport style from \"./main.module.css\"\r\nimport { FaRegFileAlt, FaFileDownload } from \"react-icons/fa\";\r\nconst Main = (props) => {\r\n\r\n    let [result, setResult] = useState('');\r\n    let files = [];\r\n    let [mainArray, setMainArray] = useState([]);\r\n    let [countItems, setCountItems] = useState(0);\r\n    let [resultArray, setResultArray] = useState([]);\r\n    let [nameFileDownload, setNameFileDownload] = useState('');\r\n    let [beforeText, setBeforeText] = useState('');\r\n    let [afterText, setAfterText] = useState('');\r\n\r\n\r\n    const onFiles = (e) => {\r\n        let tempArrayOnFile = [];\r\n        setMainArray([]);\r\n        setCountItems(0);\r\n\r\n        files = e.target.files;\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            let reader = new FileReader();\r\n            reader.readAsText(files[i]);\r\n\r\n            reader.onload = function () {\r\n                let res = reader.result.split('\\r');\r\n                let tempArray = new Array();\r\n                for (let j = 0; j < res.length; j++)  {\r\n                    if (res[j].trim() !== '') {\r\n                        tempArray.push(res[j].replace(/(\\r\\n|\\n|\\r)/gm,\"\"));\r\n                        setCountItems(countItems += 1);\r\n                    }\r\n                    console.log(reader.load);\r\n                }\r\n                tempArrayOnFile.push(tempArray)\r\n                setMainArray(tempArrayOnFile)\r\n\r\n            };\r\n\r\n            reader.onerror = function () {\r\n                console.log(reader.result);\r\n            };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // ADDING\r\n\r\n    let onAddText = () => {\r\n\r\n        let tempArrayAddText = [];\r\n        for (let b = 0; b < resultArray.length; b++) {\r\n            tempArrayAddText[b] = beforeText + resultArray[b] + afterText;\r\n        }\r\n        console.log(tempArrayAddText)\r\n        setResult(tempArrayAddText.join('\\n'));\r\n    }\r\n\r\n    // RESET\r\n\r\n    let onReset = () => {\r\n        setResult(resultArray.join('\\n'));\r\n        setBeforeText('');\r\n        setAfterText('');\r\n    }\r\n\r\n   // LOADING\r\n\r\n    const onLoad = () => {\r\n\r\n        let tempOnLoadArray = [];\r\n\r\n        console.log(mainArray)\r\n        console.log(countItems)\r\n\r\n        for (let p = 0; p < countItems; p++) {\r\n\r\n            for (let h = 0; h < mainArray.length; h++) {\r\n\r\n                if (mainArray[h][p] !== undefined) {\r\n                    tempOnLoadArray.push(mainArray[h][p])\r\n                }\r\n            }\r\n        }\r\n\r\n        setResultArray(tempOnLoadArray);\r\n        let tempRes = tempOnLoadArray.join('\\n');\r\n        setResult(tempRes);\r\n\r\n        console.log(tempRes);\r\n    }\r\n\r\n    // DOWNLOAD\r\n\r\n    const onDownload = () => {\r\n\r\n        function download(filename, result) {\r\n            filename = filename === '' ? 'result.txt' : filename + '.txt';\r\n            let element = document.createElement('a');\r\n            element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(result));\r\n            element.setAttribute('download', filename);\r\n            element.style.display = 'none';\r\n            document.body.appendChild(element);\r\n            element.click();\r\n            document.body.removeChild(element);\r\n        }\r\n\r\n        download(nameFileDownload, result);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-lg center\">\r\n\r\n            <div className={style.inputWrapper}>\r\n                <input onChange={onFiles} name=\"file\" type=\"file\" name=\"file\" id=\"inputFile\" className={style.inputFileStyle} multiple />\r\n                    <label htmlFor=\"inputFile\" className={style.inputFileButton}>\r\n                        <FaRegFileAlt className={style.inputFileIconWrapper} />\r\n                        <span className={style.inputFileButtonText}>Выберите файлы</span>\r\n                    </label>\r\n            </div>\r\n\r\n                <br />\r\n\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Текст в начале строки</label>\r\n                <input onChange={(e) => {setBeforeText(e.target.value)}} value={beforeText}\r\n                       type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" />\r\n                <label htmlFor=\"exampleFormControlInput2\" className=\"form-label\">Текст в конце строки</label>\r\n                <input onChange={(e) => {setAfterText(e.target.value)}} value={afterText}\r\n                       type=\"email\" className=\"form-control\" id=\"exampleFormControlInput2\" />\r\n                <div className=\"mb-3\">\r\n                    <br />\r\n                    <button onClick={onAddText} type=\"button\" className=\"btn btn-outline-dark\">Добавить</button>\r\n                    <button onClick={onReset} type=\"button\" className=\"btn btn-outline-dark\">Сбросить</button>\r\n                </div>\r\n\r\n\r\n                <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">Название файла</label>\r\n                <input onChange={(e) => {setNameFileDownload(e.target.value)}}\r\n                type=\"email\" className=\"form-control\" id=\"exampleFormControlInput3\" />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Результат</label>\r\n                <textarea onChange={(e) => {setResult(e.target.value)}}\r\n                className=\"form-control\" value={result} id=\"exampleFormControlTextarea1\" rows=\"7\"></textarea>\r\n            </div>\r\n\r\n                <br />\r\n\r\n            <button onClick={onLoad} type=\"submit\" className={style.inputFileButton}>\r\n                <FaFileDownload className={style.inputFileIconWrapper} />\r\n                <span>Загрузить</span>\r\n            </button>\r\n\r\n                <button onClick={onDownload} type=\"submit\" className={style.inputFileButton}>\r\n                    <FaFileDownload className={style.inputFileIconWrapper} />\r\n                    <span>Скачать результат</span>\r\n                </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Main from \"./main\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {}), withRouter) (Main);","import logo from './logo.svg';\nimport './App.css';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport MainContainer from \"./components/main/mainContainer\";\n\nfunction App() {\n  return (\n    <div>\n\n      <Switch>\n        <Route exact path='/' render={() => <Redirect to={'/main'} />}/>\n        <Route path='/main' component={MainContainer} />\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Store from './redux/reduxStore.js';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={Store}>\n            <App />\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"main_inputWrapper__j-sd8\",\"inputFileStyle\":\"main_inputFileStyle__3rIeW\",\"inputFileIconWrapper\":\"main_inputFileIconWrapper__13iaw\",\"inputFileButtonText\":\"main_inputFileButtonText__2GdEs\",\"inputFileButton\":\"main_inputFileButton__3R7_Z\"};"],"sourceRoot":""}